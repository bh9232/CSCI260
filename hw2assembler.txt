Minsky

move $gp,$t1:
add $gp,$zero,$t1	#gp<-t1

addi $s3,$s3,imm32:
lui $at,imm32hi		#at<-imm32hi
ori $at,$at,imm32lo	#at<-at|imm32lo (at<-imm32)
add $s3,$s3,$at 	#s3<-s3+at

j imm32:
lui $at,imm32hi		#at<upper 16 bits of imm32
ori $at,$at,imm32lo	#at<-at|imm32lo
jr $at			#jump to at, where imm32 is stored

sw $t2,imm32($t1):
lui $at,imm32hi		#at<-upper 16 bits of imm32
ori $at,$at,imm32lo	#at<-at|imm32lo
add $at,$t1,$at		#at<-t1+at
sw $t2,0($at)		#at<-t2 with imm32 offset 
sub $t1,$t1,$at		#t1<-t1-at (return t1 to original value)

bgt $t2,$t3,L:
slt $at,$t3,$t2		#at<-1 if t3<t2; else 0
bne $at,$zero,L		#if at!=0 goto L