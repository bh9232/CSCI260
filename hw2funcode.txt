Minsky

mask:		.word	0xfffff83f		#mask->0xfffff83f
start:		la	$t0,mask		#t0<-0xfffff83f
		lw	$t0,0($t0)		#t0<-value of 0xfffff83f
		la 	$t3,shftr		#t3<-load addr of shftr
		lw	$t3,0($t3)		#t3<-load value of shftr (t3<-t1)
		and	$t3,$t3,$t0		#t3<-t3&t0 (t1&t0)
		andi	$t2,$t2,0x001f	#t2<-clear all bits except the 5 lsb
		sll	$t2,$t2,6		#t2<-t2<<6
		or	$t3,$t3,$t2		#t3<-t3|t2 ((t1&t0)|t2)
		la	$t5,shftr		#t5<-load addr of shftr
		sw	$t3,0($t5)		#t5<-store addr of t3
shftr:		sll	$t3,$t1,0		#t3<-t1<<0

foo is storing the register t3 into register t5, which is storing the result of data manipulation with the registers t0, t1, and t2. Then t3 becomes updated back to t1.

One reason that self-modifying code is a bad idea is because debugging will be difficult since there is too much to keep track of, especially if a problem occurs.
